{"version":3,"sources":["webpack:///./src/components/homepageLayout.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/images/kids-home.jpg"],"names":["Layout","_ref","children","data","_2182785164","react_default","a","createElement","Fragment","header","menuLinks","site","siteMetadata","siteTitle","title","style","margin","padding","paddingTop","zIndex","position","bottom","left","fontSize","paddingLeft","width","background","Date","getFullYear","IndexPage","homepageLayout","seo","description","className","backgroundImage","top","height","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","maxWidth","marginBottom","marginTop","marginLeft","marginRight","textAlign","linHeight","components_image","alt","filename","gatsby_browser_entry","display","textDecoration","color","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","props","Consumer","m","module","exports","require","default","Image","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","image","images","edges","find","node","relativePath","includes","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","fluid","childImageSharp","_public_static_d_2764013587_json__WEBPACK_IMPORTED_MODULE_3__","Header","react__WEBPACK_IMPORTED_MODULE_2___default","justifyItems","alignItems","flex","gatsby__WEBPACK_IMPORTED_MODULE_3__","_components_image__WEBPACK_IMPORTED_MODULE_4__","map","link","key","name","listStyleType","textTransform","fontWeight","data-name","activeClassName","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","p"],"mappings":"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","file":"component---src-pages-index-js-6957cf1f311da8402b4f.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n import React from \"react\"\n import PropTypes from \"prop-types\"\n import { useStaticQuery, graphql } from \"gatsby\"\n\n import Header from \"./header\"\n import { Link } from \"gatsby\"\n import \"./layout.css\"\n\n const Layout = ({ children }) => {\n   const data = useStaticQuery(graphql`\n     query HomePageQuery {\n       site {\n         siteMetadata {\n           title\n           menuLinks {\n             name\n             link\n           }\n         }\n       }\n     }\n   `)\n\n\n\n  return (\n      <>\n    <Header menuLinks={data.site.siteMetadata.menuLinks} siteTitle={data.site.siteMetadata.title} />\n\n      <div\n        style={{\n          margin: `0 auto`,\n          padding: `0px`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer style={{zIndex:`3`, position:`fixed`, bottom:`0px`, left:`0px`, fontSize:`12px`, paddingLeft:`15px`, width:`100%`, background:`black`, paddingTop:`1px`}}>\n          &copy; SecondLife Harvest, Inc. {new Date().getFullYear()}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/homepageLayout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport background from \"../images/kids-home.jpg\"\n\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"SecondLife Harvest\" description=\"SecondLife Harvest, Inc. is a public charity aimed at eradicating Food Insecurity by eliminating food waste derived from prepared un-served meals.\" />\n\n    <div className={`indexWrapper`} style={{ backgroundImage: `url(${background})`, top:`0`, left: `0`, zIndex: `0`, width: `100%`, height:`100%`, backgroundPosition: `center center`, backgroundRepeat: `no-repeat`, backgroundAttachment: `local`, backgroundSize: `cover`, position: `fixed`  }}>\n\n    <div style={{zIndex: `1`, maxWidth:`300px`, marginBottom: `1.45rem`, marginTop: `7rem`, marginLeft: `auto`, marginRight: `auto`, textAlign: `center` }}>\n    <div style={{marginBottom:`30px`, fontSize:`1.2rem`, linHeight:`1.8rem`}}>Ending food insecurity today<br /> by giving food a second life</div>\n      <Image alt=\"SecondLife Harvest\" filename=\"secondlife-large.png\" />\n      <Link style={{marginTop: `1rem`, width: `160px`, marginRight: `auto`, marginLeft: `auto`, display: `block`, textDecoration: `none`, padding:`.6rem`,  color:`black`}} className={`button`} to=\"/donate\">DONATE NOW</Link>\n    </div>\n    </div>\n\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n const Image = props => (\n   <StaticQuery\n     query={graphql`\n       query {\n         images: allFile {\n           edges {\n             node {\n               relativePath\n               name\n               childImageSharp {\n                 fluid(maxWidth: 600, quality:100) {\n                   ...GatsbyImageSharpFluid\n                 }\n               }\n             }\n           }\n         }\n       }\n     `}\n     render={data => {\n       const image = data.images.edges.find(n => {\n         return n.node.relativePath.includes(props.filename);\n       });\n       if (!image) {\n         return null;\n       }\n\n       //const imageSizes = image.node.childImageSharp.sizes; sizes={imageSizes}\n       return <Img alt={props.alt} fluid={image.node.childImageSharp.fluid} />;\n     }}\n   />\n );\n\nexport default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Image from \"../components/image\"\nconst Header = ({ siteTitle, menuLinks }) => (\n\n  <header\n    style={{\n      background: \"black\",\n      position: \"fixed\",\n      zIndex: 3,\n      width: `100%`,\n    }}\n  >\n    <div\n      style={{\n        background: \"black\",\n      }}\n    >\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: 1400,\n          padding: `15px`,\n          display: \"flex\",\n          justifyItems: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1 style={{ margin: 0, flex: 1 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: \"white\",\n              textDecoration: \"none\",\n            }}\n          ><div\n          style={{\n            width: `40px`,\n          }}>\n            <Image alt=\"SecondLife Harvest\" filename=\"2l-logo-simple.png\"  />\n            </div>\n          </Link>\n        </h1>\n        <div>\n          <nav>\n            <ul className=\"nav\" style={{ display: \"flex\", flex: 1, margin: `0px` }}>\n              {menuLinks.map(link => (\n                <li\n                  key={link.name}\n                  style={{\n                    listStyleType: `none`,\n                    padding: `.5rem`,\n                    margin: `0rem`,\n                    textTransform: `uppercase`,\n                    fontWeight: `bold`,\n                    fontSize: `13px`,\n                  }}\n                >\n                  <Link style={{ color: `white`, textDecoration: `none`, }} to={link.link} data-name={link.name} activeClassName=\"active\">\n\n                  {link.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","module.exports = __webpack_public_path__ + \"static/kids-home-29f4789b52270c01e0c05f8ac39731af.jpg\";"],"sourceRoot":""}