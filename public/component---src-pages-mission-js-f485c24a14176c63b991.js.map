{"version":3,"sources":["webpack:///./src/pages/mission.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js","webpack:///./src/images/table-bg.jpg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_images_table_bg_jpg__WEBPACK_IMPORTED_MODULE_5__","_images_table_bg_jpg__WEBPACK_IMPORTED_MODULE_5___default","SecondPage","a","createElement","title","description","className","style","backgroundImage","background","top","left","zIndex","width","height","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","position","overflowY","maxWidth","marginBottom","marginTop","marginLeft","marginRight","padding","display","textDecoration","textAlign","color","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","Image","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","image","images","edges","find","node","relativePath","includes","filename","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","alt","fluid","childImageSharp","_public_static_d_2764013587_json__WEBPACK_IMPORTED_MODULE_3__","Header","siteTitle","menuLinks","react__WEBPACK_IMPORTED_MODULE_2___default","margin","justifyItems","alignItems","flex","gatsby__WEBPACK_IMPORTED_MODULE_3__","_components_image__WEBPACK_IMPORTED_MODULE_4__","map","link","key","name","listStyleType","textTransform","fontWeight","fontSize","data-name","activeClassName","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","Layout","_public_static_d_937609772_json__WEBPACK_IMPORTED_MODULE_0__","_header__WEBPACK_IMPORTED_MODULE_2__","paddingTop","bottom","paddingLeft","Date","getFullYear","float","borderRadius","p"],"mappings":"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","file":"component---src-pages-mission-js-f485c24a14176c63b991.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Image from \"../components/image\"\nimport background from \"../images/table-bg.jpg\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Our Mission\" description=\"SecondLife Harvest, Inc. is a public charity aimed at eradicating Food Insecurity by eliminating food waste derived from prepared un-served meals. Learn more about our mission.\"/>\n    <div className={`indexWrapper`} style={{ backgroundImage: `url(${background})`, top:`0`, left: `0`, zIndex: `0`, width: `100%`, height:`100%`, backgroundPosition: `center center`, backgroundRepeat: `no-repeat`, backgroundAttachment: `local`, backgroundSize: `cover`, position: `fixed`, overflowY:`scroll`}}>\n\n    <div style={{zIndex: `1`, maxWidth:`600px`, marginBottom: `1.45rem`, marginTop: `7rem`, marginLeft: `auto`, marginRight: `auto`, padding: `20px` }}>\n      <p>\n        SecondLife Harvest, Inc. is a public charity aimed at eradicating Food Insecurity\n        by eliminating food waste derived from prepared un-served meals.\n      </p>\n\n      <p>\n      One in five children in our community lives in a food insecure household.\n      </p>\n\n      <p>Too much food is wasted and never reaches those in our community who are food insecure and in desperate need of nutritious options.  This wasted food should be preserved in a safe and efficient manner and repurposed to those who are in need.  By freezing this prepared unserved food, it can be delivered to food pantries and shelters to increase their available servings and/or decrease their operating costs by diverting the cost of food purchases.\n      </p>\n      <Link style={{marginTop: `1rem`, width: `160px`, marginRight: `auto`, marginLeft: `auto`, display: `block`, textDecoration: `none`, textAlign: `center`, padding:`.6rem`, color:`black`}} className={`button`} to=\"/donate\">DONATE NOW</Link>\n    </div>\n    </div>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n const Image = props => (\n   <StaticQuery\n     query={graphql`\n       query {\n         images: allFile {\n           edges {\n             node {\n               relativePath\n               name\n               childImageSharp {\n                 fluid(maxWidth: 600, quality:100) {\n                   ...GatsbyImageSharpFluid\n                 }\n               }\n             }\n           }\n         }\n       }\n     `}\n     render={data => {\n       const image = data.images.edges.find(n => {\n         return n.node.relativePath.includes(props.filename);\n       });\n       if (!image) {\n         return null;\n       }\n\n       //const imageSizes = image.node.childImageSharp.sizes; sizes={imageSizes}\n       return <Img alt={props.alt} fluid={image.node.childImageSharp.fluid} />;\n     }}\n   />\n );\n\nexport default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Image from \"../components/image\"\nconst Header = ({ siteTitle, menuLinks }) => (\n\n  <header\n    style={{\n      background: \"black\",\n      position: \"fixed\",\n      zIndex: 3,\n      width: `100%`,\n    }}\n  >\n    <div\n      style={{\n        background: \"black\",\n      }}\n    >\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: 1400,\n          padding: `15px`,\n          display: \"flex\",\n          justifyItems: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1 style={{ margin: 0, flex: 1 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: \"white\",\n              textDecoration: \"none\",\n            }}\n          ><div\n          style={{\n            width: `40px`,\n          }}>\n            <Image alt=\"SecondLife Harvest\" filename=\"2l-logo-simple.png\"  />\n            </div>\n          </Link>\n        </h1>\n        <div>\n          <nav>\n            <ul className=\"nav\" style={{ display: \"flex\", flex: 1, margin: `0px` }}>\n              {menuLinks.map(link => (\n                <li\n                  key={link.name}\n                  style={{\n                    listStyleType: `none`,\n                    padding: `.5rem`,\n                    margin: `0rem`,\n                    textTransform: `uppercase`,\n                    fontWeight: `bold`,\n                    fontSize: `13px`,\n                  }}\n                >\n                  <Link style={{ color: `white`, textDecoration: `none`, }} to={link.link} data-name={link.name} activeClassName=\"active\">\n\n                  {link.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport { Link } from \"gatsby\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          menuLinks {\n            name\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header menuLinks={data.site.siteMetadata.menuLinks} siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          padding: `0px`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer style={{zIndex:`3`, position:`fixed`, bottom:`0px`, left:`0px`, fontSize:`12px`, paddingLeft:`15px`, width:`100%`, background:`black`, paddingTop:`1px`}}>\n          &copy; SecondLife Harvest, Inc. {new Date().getFullYear()}\n          <Link style={{padding:`0px`, width: `100px`, textAlign:`center`, display: `block`, textDecoration: `none`, float:`right`, color:`black`, borderRadius:`0px`}} className={`button`} to=\"/donate/\">DONATE NOW</Link>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/table-bg-24c9c7a9cefa06690412248961a7232e.jpg\";"],"sourceRoot":""}